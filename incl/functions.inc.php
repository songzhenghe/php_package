<?phpinclude_once("permission.php");	//生成hash字串	function __hash__($length=10){		return substr(md5(sha1(rand())),6,$length);		}	//级联创建目录	function mk_dir( $target ) { 		$target = str_replace( '//', '/', $target ); 		if ( file_exists( $target ) ) 			return @is_dir( $target ); 		if ( @mkdir( $target ) ) { 			$stat = @stat( dirname( $target ) ); 			$dir_perms = $stat['mode'] & 0007777;			@chmod( $target, $dir_perms ); 			return true; 		} elseif ( is_dir( dirname( $target ) ) ) { 				return false; 		} 		if ( ( $target != '/' ) && ( mk_dir( dirname( $target ) ) ) ) 			return mk_dir( $target ); 		return false; 	}	function br(){		echo '<br />';	}	//将html字符转码(推荐)	function safe_html($string) {		if (is_array($string)) {			foreach ($string as $_key => $_value) {				$string[$_key] =safe_html($_value);			}		} else {			$string = nl2br(htmlspecialchars($string,ENT_QUOTES));		}		return $string;	}	//加\	function addslashes_array($string) { 		//if(!GPC) { 			if(is_array($string)) { 				foreach($string as $key => $val) { 					$string[$key] = addslashes_array($val); 				} 			} else { 				$string = addslashes(trim($string)); 			} 		//} 		return $string; 	} 	//html自动化	function automatic($javascript,$jsfile='js_autoload.php',$cssfile='css_autoload.php'){		$myhtml = new myhtml;		return $myhtml			->_html()			->_head('js',return_include($jsfile))			->_head('css',return_include($cssfile))			->_head('js',$javascript)			->_body(htmlob_finish())			->_go();		}	//html自动化	/*	 * 输出各种类型的数据，调试程序时打印数据使用。	 * 参数：可以是一个或多个任意变量或值	 */	function p(){		$args=func_get_args();  //获取多个参数		if(count($args)<1){			return;		}			echo '<div style="width:100%;text-align:left"><pre>';		//多个参数循环输出		foreach($args as $arg){			if(is_array($arg)){  				print_r($arg);				echo '<br>';			}else if(is_string($arg)){				echo $arg.'<br>';			}else{				var_dump($arg);				echo '<br>';			}		}		echo '</pre></div>';		}	//加载js	function loadjs($js,$path='',$tag=1){		if($path=="") $path=P_JS;		if(!is_array($js)){			$string="<script src='{$path}{$js}.js'></script>\n";		}else{			$string='';			for($i=0;$i<count($js);$i++){				 $string.="<script src='{$path}{$js[$i]}.js'></script>\n";			}		}		if($tag==1){			echo $string;		}else{			return $string;		}			}	//加载css	function loadcss($css,$path='',$tag=1){		if($path=="") $path=P_CSS;		if(!is_array($css)){			$string="<link href='{$path}{$css}.css' rel='stylesheet' type='text/css' />\n";		}else{			$string='';			for($i=0;$i<count($css);$i++){				$string.="<link href='{$path}{$css[$i]}.css' rel='stylesheet' type='text/css' />\n";			}		}		if($tag==1){			echo $string;		}else{			return $string;		}						}		function myswitch($kvalue,$array){		return  $array[$kvalue];	}	function myswitch2($arr,$name1,$name2){		if($name2=='0'){			return '/';		}		return $arr[$name1][$name2];	}	//移除数组空元素	function array_remove_empty(& $arr){		foreach ($arr as $key => $value) {			if (is_array($value)) {				array_remove_empty($arr[$key]);			} else {				$value = trim($value);				if ($value == '') {					unset($arr[$key]);				} else{					$arr[$key] = $value;				}			}		}	}	function array_itemdel($array_source,$array_del){		foreach($array_del as $value){			$arraykeys=array_keys($array_source,$value);			foreach($arraykeys as $v){				unset($array_source[$v]);			}		}		sort($array_source);		return array_unique($array_source);	}		//加载mvc类	function load_controler($className='controller'){		$fullName='c/'.$className.'.class.php';		if(file_exists($fullName)){			$path=rtrim($_SERVER["SCRIPT_FILENAME"],'index.php');			include($path.$fullName);			return new $className;		}else{			exit('<strong>'.$fullName.' 控制器类不存在，请创建它！</strong>');		}	}	function load_model($className='model'){		$fullName='m/'.$className.'.class.php';		if(file_exists($fullName)){			$path=rtrim($_SERVER["SCRIPT_FILENAME"],'index.php');			include($path.$fullName);			return new $className;		}else{			exit('<strong> '.$fullName.' 数据库模型类不存在，请创建它！</strong>');		}	}	function load_viewer($className='viewer'){		$fullName='v/'.$className.'.class.php';		if(file_exists($fullName)){			$path=rtrim($_SERVER["SCRIPT_FILENAME"],'index.php');			include($path.$fullName);			return new $className;		}else{			exit('<strong> '.$fullName.' 模板类不存在，请创建它！</strong>');		}	}		function load_public($which='c'){		if($which=="c"){			//$path='../c.php';			$path=rtrim($_SERVER["SCRIPT_FILENAME"],'/index.php');			$path=explode('/',$path);			array_pop($path);			$path=implode('/',$path).'/c.php';			if(file_exists($path)){				include($path);				return new c;			}else{				return false;			}		}		if($which=="m"){			//$path='../m.php';			$path=rtrim($_SERVER["SCRIPT_FILENAME"],'index.php');			$path=explode('/',$path);			array_pop($path);			array_pop($path);			$path=implode('/',$path).'/m.php';			if(file_exists($path)){				include($path);				return new m;			}else{				return false;			}		}		if($which=="v"){			//$path='../v.php';			$path=rtrim($_SERVER["SCRIPT_FILENAME"],'index.php');			$path=explode('/',$path);			array_pop($path);			array_pop($path);			$path=implode('/',$path).'/v.php';			if(file_exists($path)){				include($path);				return new v;			}else{				return false;			}								}	}	function letgo(){		$args=func_get_args();		if(count($args)>0){					}		$module=trim($_GET['module']);		$action=trim($_GET['action']);		$module=($module=="")?'controller':$module;		$action=($action=="")?'index':$action;		$controller=load_controler($module);		if(method_exists($controller,$action)){			return call_user_func_array(array($controller,$action),$args);		}else{			exit("<span style='color:red;font-weight:bold;'> $module 的 $action 方法不存在，请创建！</span>");		}	}	function return_include($file){		ob_start();		include($file);		$con=ob_get_contents();		ob_end_clean();		return $con."\r\n";	}	function htmlob_begin(){		ob_start();	}	function htmlob_finish(){		$content=ob_get_contents();		ob_end_clean();		return $content;	}	function time_format($string='',$type=1){
		if($string==''){
			$string=time();
		}
		if($type==1){
			$format='Y-m-d';
		}else{
			$format='Y-m-d H:i:s';
		}
		return date($format,$string);
	}	function utf8_strlen($string) {
		preg_match_all("/./us", $string, $match);
		return count($match[0]);
	}	function changeFileSize($filesize) { 		if($filesize >= 1073741824){ 			$filesize = round($filesize / 1073741824  ,2) . ' G'; 		}else if($filesize >= 1048576){ 			$filesize = round($filesize / 1048576 ,2) . ' M'; 		}else if($filesize >= 1024){ 			$filesize = round($filesize / 1024, 2) . ' K'; 		}else{ 			$filesize = $filesize . ' Bytes'; 		} 		return $filesize; 	}	function highlight($word,$string,$color='red'){		return str_replace($word,"<strong style='color:{$color};'>{$word}</strong>",$string);	}	//echo search_condition('select * from `abc`',array('title'=>'123','con'=>'456'),'and');	function md5password($val){		return md5($val.'what');	}		/*	function load_service($className){		$fullName=str_replace('\\','/',realpath('../../')).'/'.'services/'.$className.'.class.php';		if(file_exists($fullName)){			include($fullName);			return new $className;		}else{			exit('<strong> '.$fullName.' 数据库服务类不存在，请创建它！</strong>');		}	}	*/	//加载service	function load_service($className,$path=''){		$path==''?$path=HOME_SVC:'';		$fullName=$path.$className.'.class.php';		if(file_exists($fullName)){			include($fullName);			return new $className;		}else{			exit('<strong> '.$fullName.' 数据库服务类不存在，请创建它！</strong>');		}	}	//加载instance	function load_instance($instanceName,$c=null){		$fullName=ROOT.'instances/'.$instanceName.'.instance.php';		if(file_exists($fullName)){			include($fullName);			$fun=$instanceName.'_instance';			return $fun($c);		}else{			exit('<strong> '.$instanceName.' INSTANCE不存在，请创建它！</strong>');		}	}	//加载项目模块路径	function load_pjt_mods($index='',$mod=''){		global $apps;		$single=false;		$arr=array();		$d=include(ROOT.'pjt_mods.inc.php');		if($index>0 && array_key_exists($index,$d)){			$single=true;		}		if($single){			$d=array($d[$index]);		}		foreach($d as $k=>$v){			$arr[$k]=array();			foreach($v as $x){				$arr[$k][]=array(					'linkurl'=>R_PATH.$apps[$k].$x.'/',					'incpath'=>ROOT.$apps[$k].$x.'/'				);			}		}		if($single){			$s=array_pop($arr);			if($mod>-1){				return $s[$mod];			}			return $s;		}		return $arr;	}	//创建一个数组格式	function make_array($var){		!is_array($var)?$var=array():'';		return $var;	}?>